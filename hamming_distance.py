def hamming_distance(kmer_1: str, kmer_2: str) -> int:
    """
     hamming_distance calculates the mismatch between two kmers
     params:
     kmer_1(str): The first kmer
     kmer_2(str): The second kmer
     Returns:
     hamming_distance(int): This is the number of mismatches between two strings
    """
    diff = [1 for index in range(
        len(kmer_1)) if kmer_1[index] != kmer_2[index]]
    hamming_distance = sum(diff)
    return hamming_distance


list_1 = "CACCCGAAAAGCCAACCATTATTCTACTGGCGGCGGTCACCGTCTCAGACTTTTATGACACGGCCATCTGATTTACCAGACATGCCCAACATTTTGCAATATCCTACATGGGCCACATGCACGTTTCGAGAGATTGTAAAAATGGGGTTTCACGGGCCTACGTGTCTGAGAAACAGATACAGTTACAGTCAATAGGGATTACCCGAAAGATAAGCTTTCTTAAGAACTGGATCTGTAATGTGATTGAAGCGTAGCAGCAAAGGACCGAAACTTACCTATTAGTGACCTGACTTAAACGACAAACGTCAAGTTGTACGTCTTCGCAAAAATGGAAACTGCCGTGGTAGAGCAGCTAAGCACGAAGTTCGTATAGCGCTTTTGGGAGCCCGATCAAACGGTTACCGGATCAGGCACCATATCAAGGTGAAGTTGAATAGAACAGACCGCGCTGGCATGCTCGGGGGTTCCTGGGTTAGATCAATAGCGACTGTAAATGTGGGGTCGTTGGCTGCGAGGGTCCACACAGGCACAAGCGAAATGAGCGTAGATCGACTGCGATGTCCCTCAATAAGACACCACGGACGCGTAACCACGCGGGTGCCACCGTTCTATGCCTTTTATGAGAGCCCCGTCAAACAACCAGTGTTCTCGGAAGCCAGGAAGTTAGGGCCTGAGGCCGTCACAGGGTCTGTCCGTACTGCAGGACTGCTGTTTATTTCAGAGCGGATGACCACGCATTGCTGGACGAACGACATTCCGACACTCAATATACGGCGAGCTTGAAGGAAAAGTACCATTTTGGCGGGTCATGATACTTCTGCGGAGTTTTATGTGGTTAGTGCGTAGGCCGACAGTAGTATGGCTGGCAGCCACCCGAGGCCATCAGCAGTTATGCAATCCACACGATCAGGCTTGATCTGGCACGAAGGTTCCCATAGTTGCGGTTGCCGTACGGCTTAGGTTGCTTCGATCCTCGCGATTTAGGTCGACCGGGGCGCGAGTCGCGTCACCACAAATTTCATAGACATCTGTAGGCTGCCCACTTCACACTGCATCGCTCCCATGATCGGTCGTGAAGCACAACTTCCCCTAATTATGTCACCTGCCGATATATTGCACAATAGAGTAAGAGGCGATTGCCCTAGAACTTACCTGGCGATTCCTGATCATGGGTCTTAA"
list_2 = "TGACCCACACGTCAAGCAACCTCCGGTTGAGGGTCCCGAGTCAGGCCCTGTCGTATGCAATGAGTTGTCGGAATCCTATTAGCAAGAGGTCAGCTAATGTGCGTGGGTACGTTATCGGGCCCGGGTGTGCCTGTACGTCAACGAAATTTTCCCAACTCCAACGGCCGCGCACAATGGCAACAACGGTACACATTGATCGGAAGATCTTTCCCATGATCGAGGCATGATTTTACATCTGACGCTTCCACGCGGATCTGTTTTGCCCGTCATCTCTCAAAGGCACCCAGACGCACCTCGCCTACGAACGACGTGGCGACCCGTGGATAGACGATCGGGGTCGCAGGAATTCGAAGATGCTCGCATATGCCTTCACTTTGATTTGTACTAGCCATACGACAGTTGCAAGGTGACCACCCTGTATGTGAGCCAACCGCCTAGCAGCCTCGTGTCATTAAGAGCTGTCCGCAGTTCATTGCCCTAGTCACAACATCCTGGCTATCACATCTTTTGATGAACAGGTAAGTAATACGAGAGGGCTTGTTGGAATGGGACTTGCACTAATGCGATCAACGGTGACTCATCGAAGGGGCTTCGGGGAGCTCTATGGCCGATATCTCTTCTACTTAAACCGTAAATTATAGTGTAGCTTTGCCCAAGGCTAATTCGCTTGTTAGAAACTACCCTGTAGATAATATATGGAATTATCTCCCCCAACGGCTAAAATCACATTTGATCGCGAGGCGATATCAGGAGCCGCTTCTGAGTACGCTAGAGGTGAATCGGAAGACGAATCACCTTTAGTCAATTGTTACTGCCTTAAAGAATTCTCTCGTGTCTTAAAGAGAAGAACCCACAATGATTCATGACCGTATCTAACATTTCCGTATATAGGGTCGGGGATATTCCTCGCGCAAAGACGCGGCTACGAGGATTGCCGGGAGGCTTTTTTTCATTAGCTGCAGCAAAGGGCTGAGCCATTCGCCCATACCGACTCGGCCGTATTTTGGGAAGTTGCGCCAAAGTCGTGCAAATAGACGCTACGCCCTCGGACCATCCTTCTGCAGGTCTTATTTGTTGTGACGCTACAAGTACTATTGCCAACAGTAGCTGTACCCGACCGAAGGACTAGACGGTGTAGGTAGAATTTTCTACAGATTCGACTCTACACTACCTGTAACT"

x = hamming_distance(list_1, list_2)
